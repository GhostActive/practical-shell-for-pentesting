#
# ccd.fish
#
# Copyright (C) 2021 GhostActive
#
# Author
#    GhostActive, https://github.com/ghostactive
#
# License
#    GNU General Public License v3.0
#
# Version
#    1.0
#

function ccd -d "Create and change directory; If directory already exists, than only change."
    
    # Print help text
    if contains -- "-h" $argv; or contains -- "--help" $argv
        echo ""
        echo "ccd - Create and change directory."
        echo ""
        echo "Usage: ccd [DIRECTORY]"
        echo ""
        echo "Options:"
        echo "    -h, --help      Print this help message"
        echo ""
        echo "Description:"
        echo "    'Atomic' operation to create a new directory before changing to it."
        echo "    If the given directory already exists, than only change."
        echo ""
        echo "    Handling of special folder names:"
        echo "        ccd ~       Jump to home folder of current user"
        echo "        ccd -       Return to the previous visited folder"
        echo "        ccd .       Change to current folder - 'Do nothing'"
        echo "        ccd ..      Go upwards to parent folder"
        echo ""
        echo "Examples:"
        echo "    # Jump to home directory of current user"
        echo "    ccd"
        echo ""
        echo "    # Create new folder 'workspace' and changes to it"
        echo "    ccd workspace"
        echo ""
        echo "    # Create new sub folders, if not existing, and change to 'config/'" 
        echo "    ccd workspace/scripts/config/"
        echo ""    

        return 0
    end

    set LENGTH (count $argv)

    #
    # No parameter - goto home directory
    #
    if test $LENGTH -eq 0
        cd
        return 0
    end

    #
    # Check number of parameter
    #
    if test $LENGTH -gt 1
        echo "An error occurred: Too many arguments (count: $LENGTH) '$argv'"
        echo ""
        echo "Usage: ccd [DIRECTORY]"
        echo "For more information, please see 'ccd --help'"

        return 1
    end

    #
    # Check whether special paths are used
    #
    switch $argv
        case .
            cd .        # Change to same directory
            return 0    
        case ..
            cd ..       # Change to parent directory
            return 0
        case ~
            cd ~        # Change to home directory
            return 0
        case -
            cd -        # Change to last visited directory
            return 0
    end

    #
    # Check whether given directory exists
    #
    if test ! -d $argv
        mkdir -p $argv
    end

    cd $argv

    return 0
end
